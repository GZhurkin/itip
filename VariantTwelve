Содержание и порядок выполнения работы
!!!В задании к первой работе допущена опечатка. Вместо «перегрузить операцию присваивания» следует читать «перегрузить операцию сравнения»
Работа состоит из последовательного выполнения трёх заданий:
создание класса, иерархии классов и интерфейса. Все задания выполняются последовательно в одном файле с исходным текстом в рамках
одного проекта. В отчёте к работе должны быть отдельно отражены
результаты выполнения каждого задания.
Задание 1. Разработать класс, согласно индивидуальному варианту, содержащий:
‒ элементы разного уровня доступа (public и private);
‒ не менее четырех свойств;
‒ не менее трех методов;
‒ перегрузку метода ToString();
‒ статический метод;
‒ константное или поле только для чтения;
‒ не менее трех конструкторов;
‒ перегрузку операции присваивания и одной любой арифметической.
Рекомендуемые поля и методы указаны в варианте. Также необходимо написать программу с меню, позволяющую протестировать
разработанный класс. Обязательные пункты меню:
‒ задание параметров конструируемого объекта;
‒ вывод свойств объекта;
‒ выполнение статического метода;
‒ выполнение методов объекта.
Задание 2. Разработать иерархию классов, включающую созданный в задании 1. В иерархию должно входить минимум пять классов.
Вновь добавленный корневой класс иерархии (базовый) должен быть
абстрактным и содержать общие для остальных поля и методы, а хотя
бы один класс из потомков – sealed. У каждого из классов должно
быть хотя бы одно собственное свойство и метод. Также должны быть
продемонстрированы виртуальные и переопределённые методы. Переопределенные должны вызывать методы базового класса если это
оправдано. В каждом классе должен быть метод, выводящий имя данного класса. 
В объектах дочерних классов он должен вызывать аналогичный метод родительского класса.
Необходимо написать программу с меню, позволяющую протестировать разработанную иерархию. Обязательные пункты меню:
‒ задание свойств каждого объекта; (хотя бы по одному объекту
на не абстрактный класс);
‒ вывод свойств объекта;
‒ выполнение методов объекта;
‒ вывод имени класса объекта.
Задание 3. Разработать общий интерфейс для доступа к объектам
классов разработанной иерархии. Интерфейс должен предоставлять
доступ к общим для всех классов иерархии методам. Необходимо добавить новый класс, не входящий в иерархию, однако также реализующий разработанный интерфейс.
Создать список объектов классов, реализующих разработанный
интерфейс. Создать функцию, принимающую в качестве параметра
объект любого класса, реализующего интерфейс.
Написать программу с меню, позволяющую протестировать работу списка. Обязательные пункты меню:
‒ добавление нового объекта выбранного пользователем класса в
список;
‒ вывод свойств объекта из списка;
‒ выполнение методов объекта из списка;
‒ вывод всех объектов в списке с указанием их классов;
‒ выполнение созданной функции с указанным объектом из списка

Вариант 12. Деревья.
Класс для первой части – лимонное дерево.
Варианты свойств: количество плодов, возраст, высота, здоровье.
Варианты методов: собрать урожай, позаботиться, потрогать под
вдохновляющую музыку, получить название идеальной композиции
для прогулки меж деревьев (статический).
Возможные классы иерархии: дерево (базовый), вишня, яблоня,
клён.
Возможный интерфейс: IGrowable, дополнительный класс – арбуз.
